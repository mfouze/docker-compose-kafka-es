version: "3.0"

services:
  zookeeper-a-01:
    image: confluentinc/cp-zookeeper:7.2.0-1-ubi8
    container_name: zookeeper-a-01
    hostname: zookeeper-a-01
    restart: always
    ports:
      - 12181:12181
      - 12888:12888
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: "12181"
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_TICK_TIME: "2000"
      ZOOKEEPER_SERVERS: "zookeeper-a-01:12888:13888;zookeeper-a-02:22888:23888;zookeeper-a-03:32888:33888"

  zookeeper-a-02:
    image: confluentinc/cp-zookeeper:7.2.0-1-ubi8
    container_name: zookeeper-a-02
    hostname: zookeeper-a-02
    restart: always
    ports:
      - 22181:22181
      - 22888:22888
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: "22181"
      ZOOKEEPER_TICK_TIME: "2000"
      ZOOKEEPER_SERVERS: "zookeeper-a-01:12888:13888;zookeeper-a-02:22888:23888;zookeeper-a-03:32888:33888"

  zookeeper-a-03:
    image: confluentinc/cp-zookeeper:7.2.0-1-ubi8
    container_name: zookeeper-a-03
    hostname: zookeeper-a-03
    restart: always
    ports:
      - 32181:32181
      - 32888:32888
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: "32181"
      ZOOKEEPER_TICK_TIME: "2000"
      ZOOKEEPER_SERVERS: "zookeeper-a-01:12888:13888;zookeeper-a-02:22888:23888;zookeeper-a-03:32888:33888"

  kafka-a-01:
    image: confluentinc/cp-enterprise-kafka:7.2.0-1-ubi8
    container_name: kafka-a-01
    hostname: kafka-a-01
    depends_on:
      - zookeeper-a-01
      - zookeeper-a-02
      - zookeeper-a-03
    ports:
    # Exposes 29092 for external connections to the broker
    # Use kafka-a-01:9092 for connections internal on the docker network
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - "19092:19092"
      - "9092:9092"
      - "9991:9991"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-a-01:12181,zookeeper-a-02:22181,zookeeper-a-03:32181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-a-01:19092,EXTERNAL://kafka-a-01:9092
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "dc-1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_SCHEMA_REGISTRY_URL: "sr-a-01:8081"
      KAFKA_JMX_PORT: 9991

  kafka-a-02:
    image: confluentinc/cp-enterprise-kafka:7.2.0-1-ubi8
    container_name: kafka-a-02
    hostname: kafka-a-02
    depends_on:
      - zookeeper-a-01
      - zookeeper-a-02
      - zookeeper-a-03
    ports:
      # Exposes 29092 for external connections to the broker
      # Use kafka-a-01:9092 for connections internal on the docker network
      # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - "29092:29092"
      - "9093:9093"
      - "9992:9992"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-a-01:12181,zookeeper-a-02:22181,zookeeper-a-03:32181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-a-02:29092,EXTERNAL://kafka-a-02:9093
      KAFKA_BROKER_ID: 2
      KAFKA_BROKER_RACK: "dc-2"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_SCHEMA_REGISTRY_URL: "sr-a-01:8081"
      KAFKA_JMX_PORT: 9992

  kafka-a-03:
    image: confluentinc/cp-enterprise-kafka:7.2.0-1-ubi8
    container_name: kafka-a-03
    hostname: kafka-a-03
    depends_on:
      - zookeeper-a-01
      - zookeeper-a-02
      - zookeeper-a-03
    ports:
      # Exposes 29092 for external connections to the broker
      # Use kafka-a-01:9092 for connections internal on the docker network
      # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - "39092:39092"
      - "9094:9094"
      - "9993:9993"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-a-01:12181,zookeeper-a-02:22181,zookeeper-a-03:32181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-a-03:39092,EXTERNAL://kafka-a-03:9094
      KAFKA_BROKER_ID: 3
      KAFKA_BROKER_RACK: "dc-3"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_SCHEMA_REGISTRY_URL: "sr-a-01:8081"
      KAFKA_JMX_PORT: 9993

  kafka-ui-a-01:
    image: provectuslabs/kafka-ui:v0.4.0
    container_name: kafka-ui-a-01
    hostname: kafka-ui-a-01
    depends_on:
      - kafka-a-01
      - kafka-a-02
      - kafka-a-03
      - zookeeper-a-01
      - zookeeper-a-02
      - zookeeper-a-03
      - connect-a-01
      - sr-a-01
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-a-01:9092,kafka-a-02:9093,kafka-a-03:9094
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper-a-01:12181,zookeeper-a-03:22181,zookeeper-a-03:32181"
      KAFKA_CLUSTERS_0_JMXPORT: 9991
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://sr-a-01:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://connect-a-01:8083
    #extra_hosts:
    #  - "kafka-ui-a-01:127.0.0.1"

  connect-a-01:
    image: confluentinc/cp-kafka-connect:7.2.0-1-ubi8
    container_name: connect-a-01
    hostname: connect-a-01
    command:
      - bash
      - -c
      - |
        # Install connector plugins
        # This will by default install into /usr/share/confluent-hub-components/ so make
        #  sure that this path is added to the plugin.path in the environment variables
        confluent-hub  install --no-prompt confluentinc/kafka-connect-elasticsearch:13.1.2
        # Launch the Kafka Connect worker
        /etc/confluent/docker/run &
        # Don't exit
        sleep infinity
    depends_on:
      - zookeeper-a-01
      - zookeeper-a-02
      - zookeeper-a-03
      - kafka-a-01
      - kafka-a-02
      - kafka-a-03
      - sr-a-01
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka-a-01:9092,kafka-a-02:9093,kafka-a-03:9094"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: __connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: __connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: __connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://sr-a-01:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://sr-a-01:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect-a-01"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "3"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "3"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "3"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components/'

  sr-a-01:
    image: confluentinc/cp-schema-registry:7.2.0-1-ubi8
    container_name: sr-a-01
    hostname: sr-a-01
    restart: always
    depends_on:
      - zookeeper-a-01
      - zookeeper-a-02
      - zookeeper-a-03
      - kafka-a-01
      - kafka-a-02
      - kafka-a-03
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-a-01:9092,kafka-a-02:9093,kafka-a-03:9094"
      SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: http
      SCHEMA_REGISTRY_HOST_NAME: sr-a-01
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    ports:
      - 8081:8081

  es-a-01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: es-a-01
    hostname: es-a-01
    restart: always
    environment:
      network.host: 0.0.0.0
      discovery.type: single-node
      cluster.name: es-a-01
      node.name: es-a-01
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - 9200:9200

  kibana-a-01:
    container_name: kibana-a-01
    hostname: kibana-a-01
    image: docker.elastic.co/kibana/kibana:7.13.4
    restart: unless-stopped
    environment:
      xpack.security.enabled: "false"
      ELASTICSEARCH_HOSTS: http://es-a-01:9200    # address of elasticsearch docker container which kibana will connect
    ports:
      - 5601:5601
    depends_on:
      - es-a-01
    logging:
      options:
        max-size: "${DOCKER_LOGS_MAX_SIZE:-100M}"

  logstash-a-01:
    image: docker.elastic.co/logstash/logstash:7.13.4
    container_name: logstash-a-01
    hostname: logstash-a-01
    depends_on:
      - es-a-01
    ports:
      - 5044:5044
    restart: unless-stopped

  grafana-a-01:
    image: "grafana/grafana:9.1.0-ubuntu"
    container_name: grafana-a-01
    hostname: grafana-a-01
    ports:
      - "3000:3000"
    environment:
      GF_PATHS_DATA : /var/lib/grafana
      GF_SECURITY_ADMIN_PASSWORD: kafka
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus-a-01

  prometheus-a-01:
    image: "prom/prometheus:v2.34.0"
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml"
    container_name: prometheus-a-01
    hostname: prometheus-a-01

  jmx-kafka-a-01:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
      - "5556:5556"
    environment:
      CONFIG_YML : "/etc/jmx_exporter/config.yml"
      JVM_OPTS: -Xmx128M
    volumes:
      - ./etc/jmx_exporter/config_kafka01.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka-a-01
    hostname: jmx-kafka-a-01
    depends_on:
      - kafka-a-01

  jmx-kafka-a-02:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
      - "5557:5556"
    environment:
      CONFIG_YML : "/etc/jmx_exporter/config.yml"
      JVM_OPTS: -Xmx128M
    volumes:
      - ./etc/jmx_exporter/config_kafka02.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka-a-02
    hostname: jmx-kafka-a-02
    depends_on:
      - kafka-a-02

  jmx-kafka-a-03:
    image: "sscaling/jmx-prometheus-exporter"
    ports:
      - "5558:5556"
    environment:
      CONFIG_YML : "/etc/jmx_exporter/config.yml"
      JVM_OPTS: -Xmx128M
    volumes:
      - ./etc/jmx_exporter/config_kafka03.yml:/etc/jmx_exporter/config.yml
    container_name: jmx-kafka-a-03
    hostname: jmx-kafka-a-03
    depends_on:
      - kafka-a-03

  zoonavigator-a-01:
    image: elkozmon/zoonavigator:1.1.2
    container_name: zoonavigator-a-01
    hostname: zoonavigator-a-01
    ports:
      - "8000:8000"
    environment:
      HTTP_PORT: 8000
      AUTO_CONNECT_CONNECTION_STRING: zookeeper-a-01:12181,zookeeper-a-03:22181,zookeeper-a-03:32181
    depends_on:
      - zookeeper-a-01
      - zookeeper-a-02
      - zookeeper-a-03

